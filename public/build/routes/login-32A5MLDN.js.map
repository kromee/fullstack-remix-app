{
  "version": 3,
  "sources": ["browser-route-module:routes/login.tsx?browser", "../../../app/routes/login.tsx"],
  "sourcesContent": ["export { default, meta } from \"./routes/login.tsx\";", "import React, { useState } from \"react\";\nimport type { V2_MetaFunction } from \"@remix-run/node\";\nimport { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { useActionData, Link } from \"@remix-run/react\";\n\nimport { authenticator } from \"~/utils/auth.server\";\nimport { Layout } from '~/components/layout';\nimport { Textfield } from '~/components/textfield';\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: \"New Remix App login\" }];\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request, {\n    successRedirect: \"/\",\n  })\n  return user\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  return authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/\",\n    failureRedirect: \"/login\",\n  })\n}\n\nexport default function Login() {\n  const actionData = useActionData()\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || '',\n    password: actionData?.fields?.password || '',\n  })\n\n  // Updates the form data when an input changes\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>, field: string) => {\n    setFormData(form => ({ ...form, [field]: event.target.value }))\n  }\n\n  return (\n    <Layout>\n      <div className=\"h-full justify-center bg-yellow-100 items-center flex flex-col gap-y-5\">\n        <form method=\"POST\" className=\"rounded-2xl bg-white p-6 w-96\">\n          <h2 className=\"text-3xl font-extrabold text-black-600 mb-5\">Login</h2>\n          <Textfield\n            htmlFor=\"email\"\n            label=\"Email\"\n            value={formData.email}\n            onChange={e => handleInputChange(e, 'email')}\n          />\n          <Textfield\n            htmlFor=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            value={formData.password}\n            onChange={e => handleInputChange(e, 'password')}\n          />\n          <div className=\"w-full text-center mt-5\">\n            <button type=\"submit\" name=\"_action\" value=\"Sign In\" className=\"w-full rounded-xl mt-2 bg-red-500 px-3 py-2 text-white font-semibold transition duration-300 ease-in-out hover:bg-red-600\">\n            Login\n            </button>\n          </div>\n        </form>\n        <p className=\"text-gray-600\">Dont have an account?<Link to=\"/signup\"><span className=\"text-red-600 px-2 underline\">Signup</span></Link></p>\n      </div>\n    </Layout>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAKhC,kBAA8B;AAsCpB;AAlCH,IAAM,OAAwB,MAAM;AACzC,SAAO,CAAC,EAAE,OAAO,sBAAsB,CAAC;AAC1C;AAgBe,SAAR,QAAyB;AA3BhC;AA4BE,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS;AAAA,IACvC,SAAO,8CAAY,WAAZ,mBAAoB,UAAS;AAAA,IACpC,YAAU,8CAAY,WAAZ,mBAAoB,aAAY;AAAA,EAC5C,CAAC;AAGD,QAAM,oBAAoB,CAAC,OAA4C,UAAkB;AACvF,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,OAAO,MAAM,EAAE;AAAA,EAChE;AAEA,SACE,mDAAC,UACC,6DAAC,SAAI,WAAU,0EACb;AAAA,uDAAC,UAAK,QAAO,QAAO,WAAU,iCAC5B;AAAA,yDAAC,QAAG,WAAU,+CAA8C,qBAA5D;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA,MACjE;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,OAAM;AAAA,UACN,OAAO,SAAS;AAAA,UAChB,UAAU,OAAK,kBAAkB,GAAG,OAAO;AAAA;AAAA,QAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,OAAM;AAAA,UACN,OAAO,SAAS;AAAA,UAChB,UAAU,OAAK,kBAAkB,GAAG,UAAU;AAAA;AAAA,QALhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,MACA,mDAAC,SAAI,WAAU,2BACb,6DAAC,YAAO,MAAK,UAAS,MAAK,WAAU,OAAM,WAAU,WAAU,6HAA4H,qBAA3L;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,IACA,mDAAC,OAAE,WAAU,iBAAgB;AAAA;AAAA,MAAqB,mDAAC,QAAK,IAAG,WAAU,6DAAC,UAAK,WAAU,+BAA8B,sBAA9C;AAAA;AAAA;AAAA;AAAA,aAAoD,KAAvE;AAAA;AAAA;AAAA;AAAA,aAA8E;AAAA,SAAhI;AAAA;AAAA;AAAA;AAAA,WAAuI;AAAA,OAtBzI;AAAA;AAAA;AAAA;AAAA,SAuBA,KAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEJ;",
  "names": []
}
